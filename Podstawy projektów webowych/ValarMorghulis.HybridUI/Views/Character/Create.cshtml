@model ValarMorghulis.HybridUI.Models.CreateCharacterViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Create character</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Born, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Born, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Born, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Died, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Died, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Died, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CultureId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="CultureId" id="culture-picker" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.CultureId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/selectize")

    <script>
        var culturesRequest = function (query) {
            return $.ajax({
                url: query ? '/Culture/GetCultures?q=' + encodeURIComponent(query) : '/Culture/GetCultures',
                type: 'GET'
            });
        }

        $('#culture-picker').selectize({
            valueField: 'Id',
            labelField: 'Name',
            searchField: 'Name',
            create: false,
            preload: true,
            closeAfterSelect: true,
            render: {
                option: function (item, escape) {
                    return '<div>' + item.Name + '</div>';
                }
            },
            load: function (query, callback) {
                culturesRequest(query).success(function (resp) {
                    callback(resp);
                });
            }
        });
    </script>
}
